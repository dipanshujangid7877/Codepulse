import { clsx } from 'clsx';
import React from 'react';
import styled from 'styled-components';
import { get } from '../constants.js';
import sx from '../sx.js';
import { toggleStyledComponent } from '../internal/utils/toggleStyledComponent.js';
import '../FeatureFlags/FeatureFlags.js';
import { useFeatureFlag } from '../FeatureFlags/useFeatureFlag.js';
import '../FeatureFlags/DefaultFeatureFlags.js';
import styles from './SubNav.module.css.js';

function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const CSS_MODULES_FEATURE_FLAG = 'primer_react_css_modules_staff';
// SubNav

const StyledSubNav = toggleStyledComponent(CSS_MODULES_FEATURE_FLAG, 'nav', styled.nav.withConfig({
  displayName: "SubNav__StyledSubNav",
  componentId: "sc-1t692wx-0"
})(["display:flex;justify-content:space-between;.SubNav-body{display:flex;margin-bottom:-1px;> *{margin-left:", ";}> *:first-child{margin-left:0;}}.SubNav-actions{align-self:center;}", ";"], get('space.2'), sx));
const SubNav = /*#__PURE__*/React.forwardRef(function SubNav({
  actions,
  className,
  children,
  label,
  ...rest
}, forwardRef) {
  const enabled = useFeatureFlag(CSS_MODULES_FEATURE_FLAG);
  return /*#__PURE__*/React.createElement(StyledSubNav, _extends({
    ref: forwardRef,
    className: clsx(className, 'SubNav', {
      [styles.SubNav]: enabled
    }),
    "aria-label": label
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: clsx('SubNav-body', {
      [styles.Body]: enabled
    })
  }, children), actions && /*#__PURE__*/React.createElement("div", {
    className: clsx('SubNav-actions', {
      [styles.Actions]: enabled
    })
  }, actions));
});
SubNav.displayName = 'SubNav';

// SubNav.Links

const StyledSubNavLinks = toggleStyledComponent(CSS_MODULES_FEATURE_FLAG, 'div', styled.div.withConfig({
  displayName: "SubNav__StyledSubNavLinks",
  componentId: "sc-1t692wx-1"
})(["display:flex;", ";"], sx));
const SubNavLinks = /*#__PURE__*/React.forwardRef(function SubNavLink({
  children,
  className,
  ...rest
}, forwardRef) {
  const enabled = useFeatureFlag(CSS_MODULES_FEATURE_FLAG);
  return /*#__PURE__*/React.createElement(StyledSubNavLinks, _extends({
    ref: forwardRef,
    className: clsx(className, enabled && styles.Links)
  }, rest), children);
});
SubNavLinks.displayName = 'SubNav.Links';

// SubNav.Link

const StyledSubNavLink = toggleStyledComponent(CSS_MODULES_FEATURE_FLAG, 'a', styled.a.attrs(props => ({
  className: clsx('SubNav-item', props.selected && 'selected', props.className)
})).withConfig({
  displayName: "SubNav__StyledSubNavLink",
  componentId: "sc-1t692wx-2"
})(["padding-left:", ";padding-right:", ";font-weight:", ";font-size:", ";line-height:20px;min-height:34px;color:", ";text-align:center;text-decoration:none;border-top:1px solid ", ";border-bottom:1px solid ", ";border-right:1px solid ", ";display:flex;align-items:center;&:first-of-type{border-top-left-radius:", ";border-bottom-left-radius:", ";border-left:1px solid ", ";}&:last-of-type{border-top-right-radius:", ";border-bottom-right-radius:", ";}&:hover,&:focus{text-decoration:none;background-color:", ";transition:background-color 0.2s ease;}&.selected{color:", ";background-color:", ";border-color:", ";}", ";"], get('space.3'), get('space.3'), get('fontWeights.semibold'), get('fontSizes.1'), get('colors.fg.default'), get('colors.border.default'), get('colors.border.default'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.canvas.subtle'), get('colors.fg.onEmphasis'), get('colors.accent.emphasis'), get('colors.accent.emphasis'), sx));
const SubNavLink = /*#__PURE__*/React.forwardRef(function SubNavLink({
  children,
  className,
  ...rest
}, forwardRef) {
  const enabled = useFeatureFlag(CSS_MODULES_FEATURE_FLAG);
  return /*#__PURE__*/React.createElement(StyledSubNavLink, _extends({
    ref: forwardRef,
    className: clsx(className, enabled && styles.Link),
    "data-selected": rest.selected,
    "aria-current": rest.selected
  }, rest), children);
});
SubNavLink.displayName = 'SubNav.Link';
var SubNav$1 = Object.assign(SubNav, {
  Link: SubNavLink,
  Links: SubNavLinks
});

export { SubNav$1 as default };
