import React, { type HTMLProps } from 'react';
import type { SxProp } from '../sx';
type StyledTimelineProps = {
    clipSidebar?: boolean;
    className?: string;
} & SxProp;
export type TimelineProps = StyledTimelineProps & HTMLProps<HTMLDivElement>;
type StyledTimelineItemProps = {
    condensed?: boolean;
    className?: string;
} & SxProp;
/**
 * @deprecated Use the `TimelineItemProps` type instead
 */
export type TimelineItemsProps = StyledTimelineItemProps & HTMLProps<HTMLDivElement>;
export type TimelineItemProps = StyledTimelineItemProps & HTMLProps<HTMLDivElement>;
export type TimelineBadgeProps = {
    children?: React.ReactNode;
    className?: string;
} & SxProp & React.ComponentPropsWithoutRef<'div'>;
export type TimelineBodyProps = {
    /** Class name for custom styling */
    className?: string;
} & SxProp & HTMLProps<HTMLDivElement>;
export type TimelineBreakProps = {
    /** Class name for custom styling */
    className?: string;
} & SxProp & HTMLProps<HTMLDivElement>;
declare const _default: React.ForwardRefExoticComponent<Omit<TimelineProps, "ref"> & React.RefAttributes<HTMLElement>> & {
    Item: React.ForwardRefExoticComponent<Omit<TimelineItemProps, "ref"> & React.RefAttributes<HTMLElement>>;
    Badge: {
        ({ sx, className, ...props }: TimelineBadgeProps): React.JSX.Element;
        displayName: string;
    };
    Body: React.ForwardRefExoticComponent<Omit<TimelineBodyProps, "ref"> & React.RefAttributes<HTMLElement>>;
    Break: React.ForwardRefExoticComponent<Omit<TimelineBreakProps, "ref"> & React.RefAttributes<HTMLElement>>;
};
export default _default;
//# sourceMappingURL=Timeline.d.ts.map