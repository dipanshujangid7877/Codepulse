'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var clsx = require('clsx');
var React = require('react');
var styled = require('styled-components');
var Box = require('../Box/Box.js');
var constants = require('../constants.js');
var sx = require('../sx.js');
var Breadcrumbs_module = require('./Breadcrumbs.module.css.js');
var toggleStyledComponent = require('../internal/utils/toggleStyledComponent.js');
require('../FeatureFlags/FeatureFlags.js');
var useFeatureFlag = require('../FeatureFlags/useFeatureFlag.js');
require('../FeatureFlags/DefaultFeatureFlags.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);
var styled__default = /*#__PURE__*/_interopDefault(styled);

function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const SELECTED_CLASS = 'selected';
const CSS_MODULES_FLAG = 'primer_react_css_modules_ga';
const Wrapper = toggleStyledComponent.toggleStyledComponent(CSS_MODULES_FLAG, 'li', styled__default.default.li.withConfig({
  displayName: "Breadcrumbs__Wrapper",
  componentId: "sc-9m4wsf-0"
})(["display:inline-block;white-space:nowrap;list-style:none;&::after{font-size:", ";content:'';display:inline-block;height:0.8em;margin:0 0.5em;border-right:0.1em solid;border-color:", ";transform:rotate(15deg) translateY(0.0625em);}&:first-child{margin-left:0;}&:last-child{&::after{content:none;}}"], constants.get('fontSizes.1'), constants.get('colors.fg.muted')));
const BreadcrumbsBase = toggleStyledComponent.toggleStyledComponent(CSS_MODULES_FLAG, 'nav', styled__default.default.nav.withConfig({
  displayName: "Breadcrumbs__BreadcrumbsBase",
  componentId: "sc-9m4wsf-1"
})(["display:flex;justify-content:space-between;", ";"], sx.default));
const BreadcrumbsList = ({
  children
}) => {
  const enabled = useFeatureFlag.useFeatureFlag(CSS_MODULES_FLAG);
  if (enabled) {
    return /*#__PURE__*/React__default.default.createElement("ol", {
      className: Breadcrumbs_module.BreadcrumbsList
    }, children);
  }
  return /*#__PURE__*/React__default.default.createElement(Box, {
    as: "ol",
    my: 0,
    pl: 0
  }, children);
};
BreadcrumbsList.displayName = "BreadcrumbsList";
function Breadcrumbs({
  className,
  children,
  sx: sxProp
}) {
  const enabled = useFeatureFlag.useFeatureFlag(CSS_MODULES_FLAG);
  const wrappedChildren = React__default.default.Children.map(children, child => /*#__PURE__*/React__default.default.createElement(Wrapper, {
    className: clsx.clsx({
      [Breadcrumbs_module.ItemWrapper]: enabled
    })
  }, child));
  return /*#__PURE__*/React__default.default.createElement(BreadcrumbsBase, {
    className: clsx.clsx(className, {
      [Breadcrumbs_module.BreadcrumbsBase]: enabled
    }),
    "aria-label": "Breadcrumbs",
    sx: sxProp
  }, /*#__PURE__*/React__default.default.createElement(BreadcrumbsList, null, wrappedChildren));
}
Breadcrumbs.displayName = "Breadcrumbs";
const StyledBreadcrumbsItem = toggleStyledComponent.toggleStyledComponent(CSS_MODULES_FLAG, 'a', styled__default.default.a.withConfig({
  displayName: "Breadcrumbs__StyledBreadcrumbsItem",
  componentId: "sc-9m4wsf-2"
})(["color:", ";display:inline-block;font-size:", ";text-decoration:none;&:hover,&:focus{text-decoration:underline;}&.selected{color:", ";pointer-events:none;}&.selected:focus{text-decoration:none;}", ";"], constants.get('colors.accent.fg'), constants.get('fontSizes.1'), constants.get('colors.fg.default'), sx.default));
const BreadcrumbsItem = /*#__PURE__*/React__default.default.forwardRef(({
  selected,
  className,
  ...rest
}, ref) => {
  const enabled = useFeatureFlag.useFeatureFlag(CSS_MODULES_FLAG);
  return /*#__PURE__*/React__default.default.createElement(StyledBreadcrumbsItem, _extends({
    className: clsx.clsx(className, {
      [SELECTED_CLASS]: selected,
      [Breadcrumbs_module.Item]: enabled,
      [Breadcrumbs_module.ItemSelected]: enabled && selected
    }),
    "aria-current": selected ? 'page' : null,
    ref: ref
  }, rest));
});
Breadcrumbs.displayName = 'Breadcrumbs';
BreadcrumbsItem.displayName = 'Breadcrumbs.Item';
var Breadcrumbs$1 = Object.assign(Breadcrumbs, {
  Item: BreadcrumbsItem
});

/**
 * @deprecated Use the `Breadcrumbs` component instead (i.e. `<Breadcrumb>` â†’ `<Breadcrumbs>`)
 */
const Breadcrumb = Object.assign(Breadcrumbs, {
  Item: BreadcrumbsItem
});

/**
 * @deprecated Use the `BreadcrumbsProps` type instead
 */

/**
 * @deprecated Use the `BreadcrumbsItemProps` type instead
 */

exports.Breadcrumb = Breadcrumb;
exports.default = Breadcrumbs$1;
