'use strict';

var React = require('react');
var clsx = require('clsx');
var styled = require('styled-components');
var constants = require('../constants.js');
var sx = require('../sx.js');
require('../FeatureFlags/FeatureFlags.js');
var useFeatureFlag = require('../FeatureFlags/useFeatureFlag.js');
require('../FeatureFlags/DefaultFeatureFlags.js');
var Box = require('../Box/Box.js');
var BranchName_module = require('./BranchName.module.css.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);
var styled__default = /*#__PURE__*/_interopDefault(styled);

function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const StyledBranchName = styled__default.default.a.withConfig({
  displayName: "BranchName__StyledBranchName",
  componentId: "sc-sg8jsy-0"
})(["display:inline-block;padding:2px 6px;font-size:var(--text-body-size-small,", ");font-family:var(--fontStack-monospace,", ");color:var(--fgColor-link,", ");background-color:var(--bgColor-accent-muted,", ");border-radius:var(--borderRadius-medium,", ");text-decoration:none;&:is(:not(a)){color:var(--fgColor-muted);}", ";"], constants.get('fontSizes.0'), constants.get('fonts.mono'), constants.get('colors.accent.fg'), constants.get('colors.accent.subtle'), constants.get('radii.2'), sx.default);
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function BranchName(props, ref) {
  const {
    as: BaseComponent = 'a',
    className,
    children,
    sx,
    ...rest
  } = props;
  const enabled = useFeatureFlag.useFeatureFlag('primer_react_css_modules_ga');
  if (enabled) {
    if (sx) {
      return /*#__PURE__*/React__default.default.createElement(Box, _extends({}, rest, {
        ref: ref,
        as: BaseComponent,
        className: clsx.clsx(className, BranchName_module.BranchName),
        sx: sx
      }), children);
    }
    return /*#__PURE__*/React__default.default.createElement(BaseComponent, _extends({}, rest, {
      ref: ref,
      className: clsx.clsx(className, BranchName_module.BranchName)
    }), children);
  }
  return /*#__PURE__*/React__default.default.createElement(StyledBranchName, _extends({}, rest, {
    as: BaseComponent,
    ref: ref,
    className: className,
    sx: sx
  }), children);
}
BranchName.displayName = "BranchName"; // eslint-disable-next-line @typescript-eslint/ban-types
const fixedForwardRef = React__default.default.forwardRef;

// eslint-disable-next-line @typescript-eslint/no-explicit-any

BranchName.displayName = 'BranchName';
var BranchName$1 = fixedForwardRef(BranchName);

module.exports = BranchName$1;
