'use strict';

var React = require('react');
var Box = require('../Box/Box.js');
var IconButton = require('../Button/IconButton.js');
require('../Button/ButtonBase.js');
require('../utils/defaultSxProp.js');
var Button = require('../Button/Button.js');
var clsx = require('clsx');
require('../FeatureFlags/FeatureFlags.js');
var useFeatureFlag = require('../FeatureFlags/useFeatureFlag.js');
require('../FeatureFlags/DefaultFeatureFlags.js');
var ActionList_module = require('./ActionList.module.css.js');
var featureflag = require('./featureflag.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const TrailingAction = /*#__PURE__*/React.forwardRef(({
  as = 'button',
  icon,
  label,
  href = null,
  className,
  ...props
}, forwardedRef) => {
  const enabled = useFeatureFlag.useFeatureFlag(featureflag.actionListCssModulesFlag);
  if (enabled) {
    return /*#__PURE__*/React__default.default.createElement("span", {
      className: clsx.clsx(className, ActionList_module.TrailingAction)
    }, icon ? /*#__PURE__*/React__default.default.createElement(IconButton.IconButton, _extends({
      as: as,
      "aria-label": label,
      icon: icon,
      variant: "invisible",
      tooltipDirection: "w",
      href: href
      // @ts-expect-error StyledButton wants both Anchor and Button refs
      ,
      ref: forwardedRef,
      className: ActionList_module.TrailingActionButton
    }, props)) :
    /*#__PURE__*/
    // @ts-expect-error shhh
    React__default.default.createElement(Button.ButtonComponent, _extends({
      variant: "invisible",
      as: as,
      href: href,
      ref: forwardedRef,
      className: ActionList_module.TrailingActionButton
    }, props), label));
  }
  return /*#__PURE__*/React__default.default.createElement(Box, {
    as: "span",
    "data-component": "ActionList.TrailingAction",
    sx: {
      flexShrink: 0
    }
  }, icon ? /*#__PURE__*/React__default.default.createElement(IconButton.IconButton, _extends({
    as: as,
    "aria-label": label,
    icon: icon,
    variant: "invisible",
    tooltipDirection: "w",
    href: href
    // @ts-expect-error StyledButton wants both Anchor and Button refs
    ,
    ref: forwardedRef
  }, props)) :
  /*#__PURE__*/
  // @ts-expect-error shhh
  React__default.default.createElement(Button.ButtonComponent, _extends({
    variant: "invisible",
    as: as,
    href: href,
    ref: forwardedRef
  }, props), label));
});
TrailingAction.displayName = 'ActionList.TrailingAction';

exports.TrailingAction = TrailingAction;
